(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{269:function(t,e,a){"use strict";a.r(e);var s=a(38),r=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"modulo-di-utility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#modulo-di-utility","aria-hidden":"true"}},[t._v("#")]),t._v(" Modulo di Utility")]),t._v(" "),a("p",[t._v("Per il momento questo modulo contiene solamente una libreria che permette il caricamento di mesh e materiali a partire da file "),a("code",[t._v(".obj")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"objfileloader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#objfileloader","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",[t._v("ObjFileLoader")])]),t._v(" "),a("p",[t._v("Una volta create un'istanza della classe è possibile caricare e leggere un file "),a("code",[t._v(".obj")]),t._v(" attraverso il metodo:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LoadObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string fileName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" indexed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Questa metodo richiama al suo interno un secondo metodo privato "),a("code",[t._v("_ReadObjFile(const std::string& fileName)")]),t._v(" che legge il file riga per riga, e per ognuna di esse richiama un metodo apposito in base al tipo di elemento che deve essere letto e salvato (ad esempio vertici, faccie, materiali ecc.).")]),t._v(" "),a("p",[t._v("Per il momento la classe permette di leggere file contenenti solamente degli oggetti preventivamente triangolati (e possibile effettuare questo passaggio attraverso "),a("a",{attrs:{href:"https://www.blender.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Blender"),a("OutboundLink")],1),t._v(" in fase di esportazione dell'oggetto come file "),a("code",[t._v(".obj")]),t._v("). Comunque abbiamo implementato anche il fatto di leggere più di un oggetto all'interno del file, ma solamente se questo è salvato come oggetto singolo e non come gruppo.")]),t._v(" "),a("p",[t._v("Alla fine dell'esecuzione, se tutto andrà come previsto, otterremo due vettori. Il primo contenente tutti gli oggetti espressi come mesh nel seguente formato:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RawMesh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("glm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vec3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" vertices"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("glm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vec2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" uvs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("glm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vec3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" normals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" indices"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string materialName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Il secondo è invece il vettore dei materiali, questo volta definiti secondo la seguente struttura:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Material")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    glm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vec3 ka"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    glm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vec3 kd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    glm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vec3 ks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string mapKd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string mapKs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" illum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Come è possibile vedere nella struttura del materiale è presente sia la rappresentazione mediante colori ("),a("code",[t._v("ka")]),t._v(", "),a("code",[t._v("kd")]),t._v(", "),a("code",[t._v("ks")]),t._v(") , o direttamente quella che fa uso di texture ("),a("code",[t._v("mapKd")]),t._v(", "),a("code",[t._v("mapKs")]),t._v(").")]),t._v(" "),a("p",[t._v("Questi due vettori fanno parte direttamente dell'istanza della classe "),a("code",[t._v("ObjFileLoader")]),t._v(" creata inizialmente, e possono essere richiesti rispettivamente tramite i metodi:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("RawMesh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetMeshes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nstd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Material"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetMaterials")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])},[],!1,null,null,null);e.default=r.exports}}]);